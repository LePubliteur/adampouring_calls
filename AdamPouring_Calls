import os
import requests 
import telebot
from telebot import types
from pymongo import MongoClient

bot = telebot.TeleBot(os.environ.get("TELEGRAM_API_KEY"))

# MongoDB credentials
MONGO_URI = os.environ.get("MONGO_URI")
client = MongoClient(MONGO_URI)
db = client["MyTelegramBot"]
users = db["Users"]

# Keyboard buttons
generate_phone = types.KeyboardButton('📱 Generate Phone Number')  
verify_phone = types.KeyboardButton('✅ Verify Phone Number')  
cancel = types.KeyboardButton('❌ Cancel')

# Reply keyboard 
keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
keyboard.row(generate_phone, verify_phone) 
keyboard.row(cancel)

# Helper function to generate and save phone number 
def generate_and_save_number(user_id):
    number = generate_number()
    users.insert_one({"user_id": user_id, "phone_number": number})
    return number

# Verify phone number 
def verify_phone_number(message):
    user = users.find_one({"user_id": message.chat.id})
    if user: 
        bot.send_message(message.chat.id, f"Your phone number {user['phone_number']} has been verified! 🎉")
    else:
        bot.send_message(message.chat.id, "You don't have a phone number generated. Please generate one first!")

# Generate phone number 
def generate_phone_number(message):
    try:
        number = generate_and_save_number(message.chat.id)
        bot.send_message(message.chat.id, f"Your phone number {number} has been generated! 📱")
    except:
        bot.send_message(message.chat.id, "Sorry, there was an error generating your phone number. Please try again.")

# Start command 
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, 'Welcome! What would you like to do?', reply_markup=keyboard)

# Callbacks 
@bot.message_handler(func=lambda message: message.text == '📱 Generate Phone Number')  
def generate_phone(message):
    generate_phone_number(message)

@bot.message_handler(func=lambda message: message.text == '✅ Verify Phone Number')  
def verify_phone(message):
    verify_phone_number(message)
    
@bot.message_handler(func=lambda message: message.text == '❌ Cancel')
def cancel(message):
    bot.send_message(message.chat.id, 'Action cancelled.')  

bot.polling()
